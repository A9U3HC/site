!LGTM

To get better at software development, learn something new. Force yourself to learn something new every epoch. Give yourself time to internalize it. Learn something more and build on top of it. Building more complex projects with larger feature sets will give you confidence in your ability to build and internalise complex systems in your head. You realise that your memory is not good enough. Once you reach your limit, you will start to write code which is well named, documented and easily testable.

I am yet to quantify this but once a piece of code (read function, module or) reaches a certain level of complexity you need to add tests. Code complexity is a function of representing business constraints through specific API design methods. Once the business requirements change, the code may need to be refactored before more features can be implemented.

I think that out of bug fixing, implementing features and refactoring existing code, the latter is the most mentally challenging. You have to know why a piece of code was implemented (current business requirements) and change how it works but not what it does (to meet the new business requirements).
